<UserControl x:Class="PopulousStringEditor.Views.StringComparisonView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PopulousStringEditor.Views"
             mc:Ignorable="d" >
    <Grid>
        <!-- CREATE A DATA GRID TO HOLD ALL OF THE STRING COMPARISONS. -->
        <!-- Each row of the grid will hold a comparison.  If no reference strings file is loaded, then
             only the edible strings will be displayed. -->
        <DataGrid ItemsSource="{Binding Path=StringComparisons }" AutoGenerateColumns="False"
            CanUserReorderColumns="True" CanUserResizeRows="False" CanUserSortColumns="False"
            CanUserDeleteRows="False" CanUserAddRows="False" CellEditEnding="DataGrid_CellEditEnding">
            <DataGrid.Columns>
                
                <!-- CREATE A COLUMN FOR DISPLAYING THE READ-ONLY REFERENCED STRINGS. -->
                <DataGridTextColumn x:Name="ReferenceStringsColumn" Header="Reference String" IsReadOnly="True" Width="400" Binding="{Binding ReferenceString}">

                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <!-- Allow the text to wrap onto multiple lines so the user doesn't have to do a bunch
                                of horizontal scrolling to read all of the text. -->
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <!-- Use a gray background color to help communicate that this text is read-only. -->
                            <Setter Property="Background" Value="LightGray" />
                            <!-- Remove the padding so there is less of a border around the background color. -->
                            <Setter Property="Padding" Value="0" />
                            <!-- Force the text to always be black, even when the row is selected so that it remains readable,
                                 as selecting the text can invert the color, making it illegible. -->
                            <Setter Property="Foreground" Value="Black" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- CREATE A COLUMN FOR DISPLAYING THE EDITABLE STRINGS. -->
                <DataGridTextColumn Header="String" IsReadOnly="False" Width="400" Binding="{Binding EditableString}" >

                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <!-- Allow the text to wrap onto multiple lines so the user doesn't have to do a bunch
                                 of horizontal scrolling to read all of the text. -->
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <!-- Allow the text to wrap onto multiple lines so the user doesn't have to do a bunch
                                 of horizontal scrolling to read all of the text. -->
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <!-- Remove the border so that the cell's size does not grow, causing content to shift
                                 on the screen, which can be distracting to users. -->
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
